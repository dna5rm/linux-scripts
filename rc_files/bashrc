# Do nothing if non-interactive!
[[ $- != *i* ]] && { return; }

readonly TMOUT=900

export gpg_method="symmetric"
export ANSIBLE_LOG_FILE="${HOME}/ansible.$(date +%Y%m%d_%H%M%S).log)"
export PYTHONHTTPSVERIFY=0
export TMOUT

# Update local $PATH
for p in bin .bin .cargo/bin; do
    [[ -d "${HOME}/${p}" ]] && {
        PATH=${PATH}:"${HOME}/${p}"
    }
done

# Load aliases and functions.
if [[ -d "${HOME}/bin/profile.d" ]]; then
    for i in ${HOME}/.bash_aliases ${HOME}/bin/profile.d/*.sh; do
        if [[ -r "${i}" ]]; then
            if [[ "${-#*i}" != "$-" ]]; then
                . "${i}"
            else
                . "${i}" >/dev/null
            fi
        fi
    done
fi

# Run ssh-agent.
if [[ -f "${HOME}/.ssh/id_rsa" ]]; then
    type -p ssh-agent >/dev/null 2>&1 && {
        eval $(ssh-agent) && echo
    }
fi

# Python virtual environment.
python_ver="$(python3 -c 'from sys import version_info as ver; print(ver.major,ver.minor,ver.micro, sep="_")')"
if [[ -d "${HOME}/Projects/venv${python_ver}" ]]; then
    source "${HOME}/Projects/venv${python_ver}/bin/activate"
else
    echo "Building Python virtual environment: ~/Projects/venv${python_ver}"
    mkdir -p "${HOME}/Projects/venv${python_ver}"
    python3 -m venv "${HOME}/Projects/venv${python_ver}"
    source "${HOME}/Projects/venv${python_ver}/bin/activate"
fi

##################
# Run fun stuff. #
##################

# Display the hostname at login.
[[ -d "${HOME}/.fonts/figlet" ]] && {
    type toilet >/dev/null 2>&1 && {
        uname -n | toilet -d "${HOME}/.fonts/figlet" -f elite --filter metal
    }
}

#for cmd in neofetch; do
#    type ${cmd} >/dev/null 2>&1 && {
#        ${cmd} && echo;
#    }
#done

# Provide a random quote from author.
if [[ -x "${HOME}/bin/quote.sh" ]]; then
    "${HOME}/bin/quote.sh"
fi
